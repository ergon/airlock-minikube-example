---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microgateway-iam
  labels:
    app: microgateway-iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microgateway-iam
  template:
    metadata:
      labels:
        app: microgateway-iam
    spec:
      imagePullSecrets:
        - name: dockerregcred
      initContainers:
        - name: configbuilder
          image: ergon/airlock-microgateway-configbuilder-nightly:2.0.sprint9_Build006
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: generic-parameters
                  key: TZ
            - name: OPERATIONAL_MODE
              value: production
            - name: COOKIE_NAME
              valueFrom:
                secretKeyRef:
                  name: jwt-secret
                  key: COOKIE_NAME
          volumeMounts:
            - name: config
              mountPath: /config/config.yaml
              subPath: config.yaml
              readOnly: true
            - name: secret
              mountPath: /secret/config/
              readOnly: true
            - name: data
              mountPath: /config/templates/
              subPath: microgateway/mapping-templates
            - name: config-files
              mountPath: /resources-gen
      containers:
        - name: microgateway-iam
          image: ergon/airlock-microgateway-nightly:2.0.sprint9_Build006
          imagePullPolicy: IfNotPresent
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  name: generic-parameters
                  key: TZ
          ports:
            - name: https
              containerPort: 8443
            - name: probes
              containerPort: 9090
          volumeMounts:
            - name: config-files
              mountPath: /config/
          livenessProbe:
            failureThreshold: 9
            timeoutSeconds: 5
            httpGet:
              path: /alive
              port: probes
            initialDelaySeconds: 90
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthy
              port: probes
            initialDelaySeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /usr/bin/sleep
                  - "10"
          resources:
            requests:
              memory: 256Mi
              cpu: 30m
            limits:
              memory: 4048Mi
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data-claim
        - name: config
          configMap:
            name: microgateway-iam-config
        - name: secret
          secret:
            secretName: microgateway-secret
        - name: config-files
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: microgateway-iam
  labels:
    app: microgateway-iam
spec:
  selector:
    app: microgateway-iam
  ports:
    - name: https
      port: 8443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: microgateway-iam-config
data:
  config.yaml: |
    license_file: /secret/config/license

    log:
      level: info

    session:
      redis_hosts:
      - 'redis:6379'
      encryption_passphrase_file: /secret/config/passphrase

    expert_settings:
      apache: |
        RemoteIPHeader x-real-ip
        RemoteIPInternalProxy 10.0.0.0/8
        RemoteIPInternalProxy 172.16.0.0/12
        RemoteIPInternalProxy 192.168.0.0/16
      security_gate: |
        # TODO:
        # Needed until AP-21937 is available.
        # Attention: Request Header Whitelist must allow this header
        Request.Logging.Headers.Enable        "TRUE"
        Request.Logging.Headers.Mode          "request"
        Request.Logging.Headers.Pattern       "^x-request-id:"
        Request.Logging.Headers.IgnoreCase    "TRUE"
        Request.Logging.Headers.InvertPattern "FALSE"

        RolesWhitelist.Pattern                "^authenticated$"
    apps:
    - virtual_host:
        name: vh-iam
        expert_settings:
          apache: |
            # default redirect
            RewriteRule ^/$ https://%{ENV:HTTP_HOST_NOPORT}/auth/portal [R=303,NE]
      mappings:
      - mapping_template_file: /config/templates/loginapp-7.3.xml
        entry_path:
          value: /auth/
        backend_path: /auth-login/
        operational_mode: ${OPERATIONAL_MODE:-production}
        allow_rules:
          - name: "Loginapp Single Page Application"
            enabled: true
        expert_settings:
          security_gate: |
            Cookie.PassthroughSelector.Pattern    "^${COOKIE_NAME}$"
            Cookie.PassthroughSelector.IgnoreCase "TRUE"
            # TODO:
            # Not required anymore with: ALMICRO-467
            CsrfTokens.Enable    "FALSE"
        backend:
          name: beg-iam
          hosts:
          - protocol: 'https'
            name: iam
            port: 8443
      - mapping_template_file: /config/templates/loginapp-7.3-REST-public.xml
        entry_path:
          value: /auth/rest/public
        backend_path: /auth-login/rest/public
        operational_mode: ${OPERATIONAL_MODE:-production}
        api_security:
          openapi:
            spec_file: /config/templates/login-rest-openapi.json
        backend:
          name: beg-iam
          hosts:
          - protocol: 'https'
            name: iam
            port: 8443
      - mapping_template_file: /config/templates/loginapp-7.3-REST-protected.xml
        entry_path:
          value: /auth/rest/protected
        backend_path: /auth-login/rest/protected
        api_security:
          openapi:
            spec_file: /config/templates/login-rest-openapi.json
        operational_mode: ${OPERATIONAL_MODE:-production}
        backend:
          name: beg-iam
          hosts:
          - protocol: 'https'
            name: iam
            port: 8443
      - mapping_template_file: /config/templates/adminapp-7.3.xml
        entry_path:
          value: /auth-admin/
        operational_mode: ${OPERATIONAL_MODE:-production}
        backend:
          name: beg-iam
          hosts:
          - protocol: 'https'
            name: iam
            port: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-microgateway-iam
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
    - http:
        paths:
          - path: /$
            pathType: Prefix
            backend:
              service:
                name: microgateway-iam
                port:
                  number: 8443
          - path: /auth
            pathType: Prefix
            backend:
              service:
                name: microgateway-iam
                port:
                  number: 8443
