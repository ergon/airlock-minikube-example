---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microgateway-adminer
  labels:
    app: microgateway-adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microgateway-adminer
  template:
    metadata:
      labels:
        app: microgateway-adminer
    spec:
      imagePullSecrets:
        - name: dockerregcred
      containers:
      - name: microgateway-adminer
        image: ergon/airlock-microgateway:1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: generic-parameters
              key: TZ
        - name: ALG_CFG_OPERATIONAL_MODE
          value: integration
        ports:
        - name: https
          containerPort: 8443
        volumeMounts:
        - name: config
          mountPath: /config/config.yaml
          subPath: config.yaml
        - name: secret
          mountPath: /secret/config/
          readOnly: true
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 90
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
      volumes:
      - name: config
        configMap:
          name: microgateway-adminer-config
      - name: secret
        secret:
          secretName: microgateway-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: microgateway-adminer
  labels:
    app: microgateway-adminer
spec:
  selector:
    app: microgateway-adminer
  ports:
    - name: https
      port: 8443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: microgateway-adminer-config
data:
  config.yaml: |
    license_file: /secret/config/license

    log:
      level: info
    
    session:
      redis_hosts:
      - 'redis:6379'
      store_mode: server
      encryption_passphrase_file: /secret/config/passphrase

    expert_settings:
      apache: |
        RemoteIPHeader x-real-ip
        RemoteIPInternalProxy 10.0.0.0/8
        RemoteIPInternalProxy 172.16.0.0/12
        RemoteIPInternalProxy 192.168.0.0/16
      security_gate: |
        # TODO:
        # Needed until AP-21937 is available.
        # Attention: Request Header Whitelist must allow this header
        Request.Logging.Headers.Enable        "TRUE"
        Request.Logging.Headers.Mode          "request"
        Request.Logging.Headers.Pattern       "^x-request-id:"
        Request.Logging.Headers.IgnoreCase    "TRUE"
        Request.Logging.Headers.InvertPattern "FALSE"
    
    apps:
    - virtual_host:
        name: vh-adminer
      mappings:
      - name: adminer
        entry_path: /adminer/
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        threat_handling: block
        deny_rules:
        - level: basic
        auth:
          flow: redirect
          denied_access_url: /auth/check-login
          access:
          - roles:
            - authenticated
      backend:
        name: beg-adminer
        protocol: 'http'
        hostname: adminer
        port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-microgateway-adminer
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: https
spec:
  rules:
  - http:
      paths:
      - path: /adminer
        pathType: Prefix
        backend:
          service:
            name: microgateway-adminer
            port: 
              number: 8443