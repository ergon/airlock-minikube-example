---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microgateway-iam
  labels:
    app: microgateway-iam
spec:
  replicas: 1
  selector:
    matchLabels:
      app: microgateway-iam
  template:
    metadata:
      labels:
        app: microgateway-iam
    spec:
      imagePullSecrets:
      - name: dockerregcred
      containers:
      - name: microgateway-iam
        image: ergon/airlock-microgateway:1.0
        imagePullPolicy: IfNotPresent
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              name: generic-parameters
              key: TZ
        - name: ALG_CFG_OPERATIONAL_MODE
          value: production
        ports:
        - name: https
          containerPort: 8443
        volumeMounts:
        - name: config
          mountPath: /config/config.yaml
          subPath: config.yaml
        - name: secret
          mountPath: /secret/config/
          readOnly: true
        - name: data
          mountPath: /config/templates/
          subPath: microgateway/mapping-templates
        livenessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 90
        readinessProbe:
          httpGet:
            path: /healthz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 30
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: data-claim
      - name: config
        configMap:
          name: microgateway-iam-config
      - name: secret
        secret:
          secretName: microgateway-secrets
---
apiVersion: v1
kind: Service
metadata:
  name: microgateway-iam
  labels:
    app: microgateway-iam
spec:
  selector:
    app: microgateway-iam
  ports:
    - name: https
      port: 8443
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: microgateway-iam-config
data:
  config.yaml: |
    license_file: /secret/config/license

    log:
      level: info
    
    session:
      redis_hosts:
      - 'redis:6379'
      store_mode: server
      encryption_passphrase_file: /secret/config/passphrase

    expert_settings:
      apache: |
        RemoteIPHeader x-real-ip
        RemoteIPInternalProxy 10.0.0.0/8
        RemoteIPInternalProxy 172.16.0.0/12
        RemoteIPInternalProxy 192.168.0.0/16
      security_gate: |
        # TODO:
        # Needed until AP-21937 is available.
        # Attention: Request Header Whitelist must allow this header
        Request.Logging.Headers.Enable        "TRUE"
        Request.Logging.Headers.Mode          "request"
        Request.Logging.Headers.Pattern       "^x-request-id:"
        Request.Logging.Headers.IgnoreCase    "TRUE"
        Request.Logging.Headers.InvertPattern "FALSE"
    
    apps:
    - virtual_host:
        name: vh-iam
        expert_settings:
          apache: |
            # default redirect
            RewriteRule ^/$ https://%{ENV:HTTP_HOST_NOPORT}/auth/portal [R=303,NE]
      mappings:
      - name: iam-loginapp
        mapping_template_file: /config/templates/loginapp-7.3.xml
        entry_path: /auth/
        backend_path: /auth-login/
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        expert_settings:
          security_gate: |
            # TODO:
            # Not required anymore with: ALMICRO-467
            CsrfTokens.Enable    "FALSE"
            
            RedirectForErrorPage "FALSE"
      - name: iam-loginapp-rest-public
        mapping_template_file: /config/templates/loginapp-7.3-REST-public.xml
        entry_path: /auth/rest/public
        backend_path: /auth-login/rest/public
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        expert_settings:
          security_gate: |
            RedirectForErrorPage "FALSE"
      - name: iam-loginapp-rest-protected
        mapping_template_file: /config/templates/loginapp-7.3-REST-protected.xml
        entry_path: /auth/rest/protected
        backend_path: /auth-login/rest/protected
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        expert_settings:
          security_gate: |
            RedirectForErrorPage "FALSE"
      - name: admin
        mapping_template_file: /config/templates/adminapp-7.3.xml
        entry_path: /auth-admin/
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        expert_settings:
          security_gate: |
            RedirectForErrorPage "FALSE"
      - name: dummy # TODO: Not required anymore with ALMICRO-149
        entry_path: /NBJMsEfIJA954gJbfVSDl2PFtYg/
        session_handling: enforce_session
        operational_mode: @@ALG_CFG_OPERATIONAL_MODE@@
        auth:
          access:
          - roles:
            - authenticated
      backend:
        name: beg-iam
        protocol: 'https'
        hostname: iam
        port: 8443
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-microgateway-iam
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: https
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
  - http:
      paths:
      - path: /$
        pathType: Prefix
        backend:
          service:
            name: microgateway-iam
            port:
              number: 8443
      - path: /auth
        pathType: Prefix
        backend:
          service:
            name: microgateway-iam
            port:
              number: 8443